---
- name: "aws : provision : Set list_networks"
  set_fact:
    list_networks: []
    list_instances: []
    list_dns: []
- name: "aws : provision : Create Network environments"
  include_tasks: provision/network.yml
- name: "aws : provision : Create {{ libre_infra.ec2.environements_nb|int }} student environments"
  include_tasks: provision/instance.yml
  vars:
    labenv: "{{item}}"
  with_sequence: count={{libre_infra.ec2.environements_nb|int}}
- name: "aws : provision : Create DNS environments"
  include_tasks: provision/dns.yml
- name: "aws : provision : Record Inventory"
  include_tasks: provision/inventory.yml
- name: "aws : provision : Wait for the instances to boot by checking the ssh port"
  wait_for:
    host: "{{item.public_ip}}"
    port: 22
    delay: 10
    sleep: 5
    timeout: 60
    state: started
  with_items: "{{ list_instances }}"
  
- name: "aws : provision : Create inventory directory {{ config_libre.directory.conf }}/inventory"
  file:
    state: directory
    path: "{{ config_libre.directory.conf }}/inventory"
    mode: 0775
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
    recurse: yes
- name: "aws : provision : Copy ssh default private key {{ libre_infra_ssh_private_key_file }} to {{r_libre_userconfig_dir}}/infra-id_rsa"
  copy:
    src: '{{ libre_infra_ssh_private_key_file }}'
    dest: "{{r_libre_userconfig_dir}}/infra-id_rsa"
    mode: 0644
  when: libre_infra_ssh_private_key_file is defined
- name: "aws : provision : Copy ssh default public key {{ libre_infra_ssh_public_key_file }} to {{r_libre_userconfig_dir}}/infra-id_rsa.pub"
  copy:
    src: '{{ libre_infra_ssh_public_key_file }}'
    dest: "{{r_libre_userconfig_dir}}/infra-id_rsa.pub"
    mode: 0644
  when: libre_infra_ssh_public_key_file is defined
- name: "aws : provision : Generate inventory {{ config_libre.directory.conf }}/inventory/local.yml"
  template:
    src: inventory-local.j2
    dest: "{{ config_libre.directory.conf }}/inventory/local.yml"
#    remote_src: yes
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "aws : provision : Generate inventory {{ config_libre.directory.conf }}/inventory/instructor.yml"
  template:
    src: inventory-instructor.j2
    dest: "{{ config_libre.directory.conf }}/inventory/instructor.yml"
#    remote_src: yes
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "aws : provision : Generate inventory {{ config_libre.directory.conf }}/inventory/students.yml"
  template:
    src: inventory-students.j2
    dest: "{{ config_libre.directory.conf }}/inventory/students.yml"
#    remote_src: yes
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"

- name: "aws : provision : Set infrastructure state to provisionned"
  set_fact:
    libre_infra: "{{ libre_infra|combine({'state': 'provisionned' }, recursive=True) }}"
- name: "aws : provision : Update infrastructure config file {{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
  template:
    src: templates/libre-infra.j2
    dest: "{{ config_libre.directory.conf }}/{{ r_infra_config_file }}"
- name: "aws : provision : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_tmp + '/' + r_libre_tmpfile) | default('') }}"
- name: "aws : provision : Generate LIBRE report at {{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
  template:
    src: templates/libre_report-provision.j2
    dest: "{{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
    mode: 0664
- name: "aws : provision : Log provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "AWS infrastructure is Provisionned"
    log_component: infra-aws
    log_action: provision
    
- name: "aws : provision : Infrastructure provisionning is finish"
  debug:
    msg:
      - " "
      - "We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure"
      - " "
      - "Here are some interesting characteristics of this classroom infrastructure:"
      - " "
      - "  - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
      - "  - IP address: {{ ec2.tagged_instances[0].public_ip }}"
      - "  - Type: {{ libre_infra.ec2.type }}"
      - "  - Region: {{ libre_infra.ec2.region }}"
      - "  - SSH User: {{ libre_infra.ssh.user }}"
      - "  - SSH Key: {{ libre_infra.ssh.keyname }}.pem"
      - "  - Size: {{ libre_infra.ec2.environements_nb }} workstations"
      - " "
      - "You must finish your installation by running the following command :"
      - "  ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml"
      - " "
      - " Have a happy setup ;)"
#- name: "provision : Send a mail for notification"
#  mail:
##     from: cl@startx.fr
#    to: cl@startx.fr
#    subject: "Classroom {{ libre_session.course }}.{{ libre_infra.route53.domain }} has been provisioned"
#    body: |
#      We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure
#
#      Here are some interesting characteristics of this classroom infrastructure:
#
#        - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}
#        - IP address: {{ ec2.tagged_instances[0].public_ip }}
#        - Type: {{ libre_infra.ec2.type }}
#        - Region: {{ libre_infra.ec2.region }}
#        - SSH User: {{ libre_infra.ssh.user }}
#        - SSH Key: {{ libre_infra.ssh.keyname }}.pem
#        - Size: {{ libre_infra.ec2.environements_nb }} workstations
#
#     You must finish your installation by running the following command :
#       ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml
#
#     Have a happy setup ;)

