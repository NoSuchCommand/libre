---
- name: "config : gapi : Configure of the session ID"
  pause:
   prompt: "What is your session ID ?"
  register: sessionID
  delegate_to: localhost
  when: libre_session is undefined and session_id is undefined
- name: "config : gapi : Register session_id fact"
  set_fact:
    session_id: "{{ sessionID.user_input }}"
  when: libre_session is undefined and sessionID.user_input is defined
- name: "config : gapi : Session ID doesn't match a good number"
  fail: msg="You must give a good Session ID"
  when: libre_session is undefined and session_id|default('')|string == ""
- name: "config : gapi : Configure of the session token"
  pause:
   prompt: "What is the coresponding session token ?"
   echo: no
  register: sessionToken
  delegate_to: localhost
  when: libre_session is undefined and session_token is undefined
- name: "config : gapi : Register session_token fact"
  set_fact:
    session_token: "{{ sessionToken.user_input }}"
  when: libre_session is undefined and sessionToken.user_input is defined
- name: "config : gapi : Session token doesn't match a good token"
  fail: msg="You must give a good Session token"
  when: libre_session is undefined and session_token|default('')|string == ""
- name: "config : gapi : Set configuration has changed if config file are missing"
  set_fact:
  when: libre_session is undefined and r_session_conf_details.stat.exists != true
- name: "config : gapi : Calling Google API backend for session"
  include_role:
    name: libre
    tasks_from: lib/gapi
- name: "config : gapi : Extract google API returned data"
  set_fact:
    course_id: "{{ gapiReturn.cours }}"
    session_id: "{{ gapiReturn.id }}"
    session_instructor: "{{ gapiReturn.instructor }}"
    session_type: "{{ gapiReturn.type }}"
    session_state: "{{ gapiReturn.state }}"
    session_start: "{{ gapiReturn.start }}"
    session_stop: "{{ gapiReturn.stop }}"
    session_commentToTrainer: "{{ gapiReturn.commentToTrainer }}"
    session_commentToFacility: "{{ gapiReturn.commentToFacility }}"
    session_commentFromTrainer: "{{ gapiReturn.commentFromTrainer }}"
    session_students: "{{ gapiReturn.students }}"
  when: gapiReturn is defined

- name: "config : gapi : Generate session config file {{ r_session_dir_conf }}/{{ r_session_config_file }}"
  template:
    src: ../templates/libre-session-gapi.j2
    dest: "{{ r_session_dir_conf }}/{{ r_session_config_file }}"
    mode: 0664
    owner: "{{ r_session_user }}"
    group: "{{ r_session_group }}"
  become: yes


